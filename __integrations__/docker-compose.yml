version: "3.2"

services:

  functions-node-20:
    image: functions-node-20
    build:
      context: ..
      dockerfile: ./docker/functions-node-20/Dockerfile
    command: /bin/true

  cosmosdb:
    image: cosmosdb
    env_file:
      - ./environments/generated/env.cosmosdb
    build:
      context: ../docker/cosmosdb
      dockerfile: ./Dockerfile
    ports:
      - ${COSMOSDB_PORT}:3000

  storage-account:
    image: azurite
    build:
      context: ../docker/azurite
      dockerfile: ./Dockerfile
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
  
  fixtures:
    image: fixtures
    env_file:
      - ./environments/generated/env.io-fixtures
    build:
      context: ../docker/fixtures
      dockerfile: ./Dockerfile
    links:
      - storage-account
      - cosmosdb

  function:
    image: fn
    env_file:
      - ./environments/generated/env.io-functions-services
    build:
      context: ..
      dockerfile: ./docker/functions/Dockerfile
    ports:
      - ${FUNCTIONS_SERVICES_PORT}:7071
    links:
      - cosmosdb
      - storage-account
    depends_on:
      - functions-node-20
      - fixtures

  testagent:
    image: node:20-alpine@sha256:eabac870db94f7342d6c33560d6613f188bbcf4bbe1f4eb47d5e2a08e1a37722
    container_name: fn_services_testagent
    working_dir: /usr/src/app
    command: tail -f /dev/null # to keep it   up&running
    env_file:
      - environments/generated/env.integration-tests
    ports:
      - ${APIM_PORT}:${APIM_PORT}
    volumes:
      - "./:/usr/src/app"
      - "../__mocks__:/usr/src/__mocks__"
      - "../node_modules:/usr/src/node_modules"
      - "../generated:/usr/src/generated"
      - "../openapi:/usr/src/openapi"
    depends_on:
      - cosmosdb
      - storage-account
      - fixtures
    links:
      - function
