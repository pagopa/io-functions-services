version: "3.2"

services:

  functions-node-14:
    image: functions-node-14
    build:
      context: ..
      dockerfile: ./docker/functions-node-14/Dockerfile
    command: /bin/true

  cosmosdb:
    image: cosmosdb
    env_file:
      - ./environments/generated/env.cosmosdb
    build:
      context: ../docker/cosmosdb
      dockerfile: ./Dockerfile
    ports:
      - ${COSMOSDB_PORT}:3000

  storage-account:
    image: azurite
    build:
      context: ../docker/azurite
      dockerfile: ./Dockerfile
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
  
  durable-functions-storage-account:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite --loose --blobHost 0.0.0.0 --blobPort 10003 --queueHost 0.0.0.0 --queuePort 10004 --tableHost 0.0.0.0 --tablePort 10005"
    ports:
      - 10003:10003
      - 10004:10004
      - 10005:10005

  fixtures:
    image: fixtures
    env_file:
      - ./environments/generated/env.io-fixtures
    build:
      context: ../docker/fixtures
      dockerfile: ./Dockerfile
    links:
      - storage-account
      - cosmosdb

  function:
    image: fn
    env_file:
      - ./environments/generated/env.io-functions-services
    build:
      context: ..
      dockerfile: ./docker/functions/Dockerfile
    volumes:
      - "../:/usr/src/app"
    ports:
      - ${FUNCTIONS_SERVICES_PORT}:7071
    links:
      - cosmosdb
      - storage-account
      - durable-functions-storage-account
    depends_on:
      - functions-node-14
      - fixtures

  testagent:
    image: node:16-alpine
    working_dir: /usr/src/app
    command: tail -f /dev/null # to keep it   up&running
    env_file:
      - environments/generated/env.integration-tests
    volumes:
      - "./:/usr/src/app"
      - "../openapi:/usr/src/openapi"
    depends_on:
      - cosmosdb
      - storage-account
      - fixtures
    links:
      - function
