# Azure DevOps pipeline to build, check source codes and run tests.
#
# To make Danger JS run on a pull request you need to add the following pipeline 
# variable and set it with a GitHub access token (scope public_repo); otherwise 
# set its value to 'skip' without marking it secret: 
# - DANGER_GITHUB_API_TOKEN
# 

variables:
  NODE_VERSION: '10.14.1'
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger: none

# This pipeline has been implemented to be run on hosted agent pools based both
# on 'windows' and 'ubuntu' virtual machine images and using the scripts defined
# in the package.json file. Since we are deploying on Azure functions on Windows
# runtime, the pipeline is currently configured to use a Windows hosted image for
# the build and deploy.
pool:
  vmImage: 'ubuntu-latest'

stages:
  # A) Build and code validation
  - stage: Build
    dependsOn: []
    jobs:
      # A1) Checkout, install module and build code
      - job: make_build
        pool:
          # As we deploy on Wondows machines, we use Windows to build
          vmImage: 'windows-2019'         
        steps:
        - template: azure-templates/setup-project.yml
        - script: |
            yarn build
          displayName: 'Build'

  - stage: Static_analysis
    dependsOn: []
    jobs:
      
      - job: lint     
        steps:
        - template: azure-templates/setup-project.yml

        - script: |
            yarn lint
          displayName: 'Lint'

      - job: lint_api     
        steps:
        - template: azure-templates/setup-project.yml
        # OpenAPI spec is a versione file, still is created with a generation process from a template
        # We need to check it either is out-of-sync with the template or it has been manually edited
        - script: |
            yarn openapi:bundle
          displayName: 'Bundle OpenAPI'
        - script: |
            [[ -z $(git status --porcelain) ]] && exit 0 || exit 1
          displayName: 'Check OpenAPI spec is up-to-date'
        - script: |
            yarn openapi:validate
          displayName: 'Validate OpenAPI'

      - job: danger
        condition: 
          and(
            succeeded(), 
            and(
              eq(variables['Build.Reason'], 'PullRequest'),
              ne(variables['DANGER_GITHUB_API_TOKEN'], 'skip')
            )
          )
        steps:
          - template: azure-templates/setup-project.yml

          - bash: |
              yarn danger ci
            env:
              DANGER_GITHUB_API_TOKEN: '$(DANGER_GITHUB_API_TOKEN)'
            displayName: 'Danger CI'

  - stage: Test
    dependsOn: []
    jobs:
      - job: unit_tests
        steps:
        - template: azure-templates/setup-project.yml

        - script: |
            yarn generate
          displayName: 'Generate defintions'

        - script: |
            yarn test:coverage
          displayName: 'Unit tests exec'

        - bash: |
            bash <(curl -s https://codecov.io/bash)
          displayName: 'Code coverage'
