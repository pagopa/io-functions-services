swagger: '2.0'
info:
  description: Microservice JAVA API
  title: Microservice JAVA API
  version: 1.0.1
host: 'localhost:9090'
basePath: /api/v1/payment
schemes:
  - https
paths:
  '/check/messages/{messageId}':
    get:
      produces:
        - application/json
      parameters:
        - description: payment's messageId
          in: path
          name: messageId
          required: true
          type: string
      responses:
        '200':
          description: check if the message has been paid
          schema:
            $ref: '#/definitions/Payment'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Problem'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Problem'
        '404':
          description: Not Found
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Problem'
      tags:
        - API  Payment
      operationId: isMessagePaid
      summary: Check payment by messageId
definitions:
  Message:
    properties:
      content_paymentData_dueDate:
        format: date
        type: string
      content_paymentData_invalidAfterDueDate:
        type: boolean
      content_paymentData_noticeNumber:
        type: string
      content_paymentData_payeeFiscalCode:
        type: string
      content_subject:
        type: string
      content_type:
        enum:
          - GENERIC
          - PAYMENT
          - EU_COVID_CERT
          - LEGAL
        type: string
      createdAt:
        type: number
      double content_paymentData_amount:
        type: number
      featureLevelType:
        enum:
          - STANDARD
          - ADVANCED
        type: string
      fiscal_code:
        type: string
      id:
        type: string
      isPending:
        type: boolean
      senderServiceId:
        type: string
      senderUserId:
        type: string
      timeToLiveSeconds:
        type: integer
      timestamp:
        type: number
    type: object
  Payment:
    properties:
      dateReminder:
        items:
          format: date-time
          type: string
        type: array
      insertionDate:
        format: date-time
        type: string
      lastDateReminder:
        format: date-time
        type: string
      maxPaidMessageSend:
        type: integer
      maxReadMessageSend:
        type: integer
      message:
        items:
          $ref: '#/definitions/Message'
        type: object
      paidDate:
        format: date-time
        type: string
      paidFlag:
        type: boolean
      readDate:
        format: date-time
        type: string
      readFlag:
        type: boolean
      rptId:
        type: string
    type: object
  Problem:
    properties:
      error:
        description: |
          error description.
        format: uri
        type: string
      path:
        description: >
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
        type: string
      status:
        description: |
          Status code description.
        type: string
      timestamp:
        description: |
          timestamp of the error
        type: number
    type: object
securityDefinitions:
  SubscriptionKey:
    description: he API key obtained through the developer portal.
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
security:
  - SubscriptionKey: []
tags:
  - description: API  Payment
    name: API  Payment