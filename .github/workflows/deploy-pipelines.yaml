name: Deploy Pipelines

on:
  workflow_call:
    inputs:
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      app_name:
        description: Web App name.
        type: string
        required: true
      use_staging_slot:
        description: True if artifact should be deployed to staging slot
        type: boolean
        required: false
        default: true
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true

env:
  BUNDLE_NAME: bundle

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      WORKSPACE: ${{ github.workspace }}

    steps:
      - name: Check-out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: ".node-version"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: Install dependencies
        run: yarn install --immutable
        working-directory: .

      - name: Build
        run: yarn build
        working-directory: .

      - name: Copy deploy files
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
        env:
          TARGET_FOLDER: "${{ github.workspace }}/${{ env.BUNDLE_NAME }}"
          SOURCE_FOLDER: "${{ github.workspace }}"
          CONTENTS: |
            **/*
            !.git/**/*
            !**/*.js.map
            !**/*.ts
            !.vscode/**/*
            !.devops/**/*
            !.github/**/*
            !.prettierrc
            !.gitignore
            !README.md
            !jest.config.js
            !local.settings.json
            !test
            !tsconfig.json
            !tslint.json
            !yarn.lock
            !Dangerfile.js
            !CODEOWNERS
            !__*/**/*
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |-
            const fs = require('fs').promises
            const path = require('path')
            const target = path.resolve(process.env.TARGET_FOLDER)

            process.chdir(process.env.SOURCE_FOLDER || '.')

            if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)

            const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
            const options = {force: process.env.OVERWRITE === 'true'}
            const globber = await glob.create(process.env.CONTENTS || '**')

            for await (const file of globber.globGenerator()) {
              if ((await fs.lstat(file)).isDirectory()) continue
              const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
              const dest = path.join(target, filename)
              await io.mkdirP(path.dirname(dest))
              await io.cp(file, dest, options)
            }

      - name: Make Zip File
        run: zip -r ${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip ${{ github.workspace }}/${{ env.BUNDLE_NAME }}

      - name: Upload Artifact
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: "${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip"
          if-no-files-found: error
          retention-days: 7

  deploy:
    if: ${{ !github.event.act }}
    needs: [build]
    runs-on: ${{ inputs.use_private_agent == true && 'self-hosted' || 'ubuntu-22.04' }}
    environment: ${{ inputs.environment }}-cd
    permissions:
      id-token: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: ${{ env.BUNDLE_NAME }}

      - name: Azure Login
        uses: azure/login@v2 # v2.0.0
        env:
          ARM_USE_OIDC: true
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Deploy
        if: ${{ inputs.use_staging_slot == false }}
        run: |
          az webapp deploy \
            --resource-group ${{ inputs.resource_group_name }} \
            --name ${{ inputs.app_name }} \
            --src-path  ${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip \
            --type zip \
            --async false

      - name: Deploy to Staging Slot
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deploy \
            --resource-group ${{ inputs.resource_group_name }} \
            --name ${{ inputs.app_name }} \
            --slot staging \
            --src-path  ${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip \
            --type zip \
            --async false

      - name: Swap Staging and Production Slots
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deployment slot swap \
            -g ${{ inputs.resource_group_name }} \
            -n ${{ inputs.app_name }} \
            --slot staging \
            --target-slot production