name: Deploy Pipelines

on:
  workflow_call:
    inputs:
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      app_name:
        description: Web App name.
        type: string
        required: true
      use_staging_slot:
        description: True if artifact should be deployed to staging slot
        type: boolean
        required: false
        default: true
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true

env:
  BUNDLE_NAME: bundle

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      WORKSPACE: ${{ github.workspace }}

    steps:
      - name: Check-out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: ".node-version"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: Install dependencies
        run: yarn install --immutable
        working-directory: .

      - name: Build
        run: yarn build
        working-directory: .

      - name: Build the Function App Artifact
        id: make-function-app-artifact
        run: |
          npm pkg set --json "bundledDependencies"=true
          npm pkg set --json "files"='["**/function.json", "dist", "host.json","extensions.csproj"]'
          npx npm-pack-zip
          package_name=$(jq -r .name package.json)
          mv ${package_name//\/}.zip ${{ env.BUNDLE_NAME }}.zip
          echo "artifact-path=$(realpath ${{ env.BUNDLE_NAME }}.zip)" >> "$GITHUB_OUTPUT"

      - name: Upload Artifact
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: ${{ steps.make-function-app-artifact.outputs.artifact-path }}
          if-no-files-found: error
          retention-days: 7

  deploy:
    if: ${{ !github.event.act }}
    needs: [build]
    runs-on: ${{ inputs.use_private_agent == true && 'self-hosted' || 'ubuntu-22.04' }}
    environment: ${{ inputs.environment }}-cd
    permissions:
      id-token: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: ${{ env.BUNDLE_NAME }}

      - name: Azure Login
        uses: azure/login@v2 # v2.0.0
        env:
          ARM_USE_OIDC: true
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Deploy
        if: ${{ inputs.use_staging_slot == false }}
        run: |
          az webapp deploy \
            --resource-group ${{ inputs.resource_group_name }} \
            --name ${{ inputs.app_name }} \
            --src-path  ${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip \
            --type zip \
            --async false

      - name: Deploy to Staging Slot
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deploy \
            --resource-group ${{ inputs.resource_group_name }} \
            --name ${{ inputs.app_name }} \
            --slot staging \
            --src-path  ${{ github.workspace }}/${{ env.BUNDLE_NAME }}.zip \
            --type zip \
            --async false

      - name: Swap Staging and Production Slots
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deployment slot swap \
            -g ${{ inputs.resource_group_name }} \
            -n ${{ inputs.app_name }} \
            --slot staging \
            --target-slot production